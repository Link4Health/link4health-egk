# Workflow for deploying documentation and reports to GitHub Pages
name: Deploy Documentation and Reports to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggered when the "Release build and publish ApiShared" workflow completes
  workflow_run:
    workflows: [ "Build and publish Egk Release" ]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write  # Permissions to create and manage pull requests

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job for deploying documentation and reports
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout EGK
        uses: actions/checkout@v4
        with:
          repository: Link4Health/link4health-egk-library
          ref: 'main'  # Ensure the main branch is checked out
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: EGK grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set up git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''

      - name: Install Android SDK
        run: sdkmanager "platform-tools" "platforms;android-34"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/gradle.properties
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create gradle.properties
        run: |
          mkdir -p ~/.gradle
          echo "nvdApiKey=${{ secrets.NVD_API_KEY }}" >> ~/.gradle/gradle.properties
          echo "contextUrl=${{ secrets.ARTIFACTS_CONTEXT_URL }}" >> ~/.gradle/gradle.properties
          echo "nexusUsername=${{ secrets.NEXUS_USERNAME }}" >> ~/.gradle/gradle.properties
          echo "nexusPassword=${{ secrets.NEXUS_PASSWORD }}" >> ~/.gradle/gradle.properties
          echo "anonymous=false" >> ~/.gradle/gradle.properties
          echo "org.gradle.internal.publish.checksums.insecure=true" >> ~/.gradle/gradle.properties

      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      - name: Generate Documentation Index HTML
        run: ./gradlew generateDocIndexHtml

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the docs directory
          path: 'docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sign-commits: true
          commit-message: "Update generated documentation"
          branch: update-pages-deployment
          base: pages-deployment
          title: "Deploy Documentation and Reports"
          body: "Automated deployment of documentation and reports"

      # Optionally, automatically merge the PR if the checks pass
      - name: Merge Pull Request
        if: steps.create_pr.outputs.pull-request-url != ''
        run: |
          gh pr merge ${{ steps.create_pr.outputs.pull-request-url }} --merge --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
