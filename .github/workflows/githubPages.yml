# Workflow for deploying documentation and reports to GitHub Pages
name: Deploy Documentation and Reports to Pages

on:
  # Runs on pushes targeting the develop branch
  #  push:
  #    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggered when the "Release build and publish ApiShared" workflow completes
  workflow_run:
    workflows: [ "Create Release for eGK library" ]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job for deploying documentation and reports
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'main'  # Ensure the main branch is checked out
          fetch-depth: 0  # Fetch all history for all tags and branches
          fetch-tags: true  # Ensure tags are fetched

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Store secret in gradle.properties
        run: |
          mkdir -p ~/.gradle
          echo "nvdApiKey=${{ secrets.NVD_API_KEY }}" >> ~/.gradle/gradle.properties

      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      - name: Generate Documentation Index HTML
        run: ./gradlew generateDocIndexHtml

      - name: Commit and Push Changes
        run: |
          git add docs
          git commit -m "Update generated documentation"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.SDK_REPO_PAT }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the docs directory
          path: 'docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
